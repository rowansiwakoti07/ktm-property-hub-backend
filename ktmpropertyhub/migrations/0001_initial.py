# Generated by Django 5.2.4 on 2025-08-12 09:35

import cloudinary.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Facilities',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listing_purpose', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('RENT', 'Rent')], max_length=4)),
                ('property_type', models.CharField(choices=[('LAND', 'Land'), ('HOUSE', 'House'), ('APARTMENT', 'Apartment')], max_length=10)),
                ('title', models.CharField(help_text='A brief title for the listing.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Detailed description or other requirements.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is the listing currently active and visible?')),
                ('local_area', models.CharField(blank=True, help_text='Specific local area, neighborhood, or municipality.', max_length=255, null=True)),
                ('price_min', models.DecimalField(blank=True, decimal_places=2, help_text="For 'Buy' listings only.", max_digits=14, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('price_negotiable', models.CharField(blank=True, choices=[('FIXED', 'Fixed'), ('NEGOTIABLE', 'Negotiable')], max_length=10, null=True)),
                ('land_size_1_value', models.FloatField(blank=True, null=True)),
                ('land_size_1_unit', models.CharField(blank=True, max_length=20, null=True)),
                ('land_size_2_value', models.FloatField(blank=True, null=True)),
                ('land_size_2_unit', models.CharField(blank=True, max_length=20, null=True)),
                ('road_size_min_ft', models.PositiveIntegerField(blank=True, help_text="For 'Buy' listings only.", null=True)),
                ('road_size_ft', models.PositiveIntegerField(blank=True, null=True)),
                ('road_condition', models.CharField(blank=True, choices=[('ANY', 'Any'), ('PITCHED', 'Pitched/Dhalan'), ('GRAVELED', 'Graveled'), ('SOIL', 'Kachchi/Soil')], max_length=10, null=True)),
                ('facing_direction', models.CharField(blank=True, choices=[('ANY', 'Any'), ('E', 'East'), ('W', 'West'), ('N', 'North'), ('S', 'South'), ('NE', 'Northeast'), ('NW', 'Northwest'), ('SE', 'Southeast'), ('SW', 'Southwest')], max_length=3, null=True)),
                ('land_type', models.CharField(blank=True, choices=[('RESIDENTIAL', 'Residential Land'), ('COMMERCIAL', 'Commercial Land'), ('AGRICULTURAL', 'Agricultural Land'), ('INDUSTRIAL', 'Industrial Land')], max_length=20, null=True)),
                ('property_condition', models.CharField(blank=True, choices=[('ANY', 'Any'), ('NEW', 'New (Not Used)'), ('JUST_USED', 'Just Used (Few Months)'), ('USED_LESS_5', 'Used for less than 5 years'), ('USED_MORE_5', 'Used for more than 5 years')], max_length=20, null=True)),
                ('built_year_bs', models.PositiveIntegerField(blank=True, help_text='Year of construction in Bikram Sambat.', null=True)),
                ('built_year_ad', models.PositiveIntegerField(blank=True, help_text='Year of construction in AD.', null=True)),
                ('floors_min', models.PositiveIntegerField(blank=True, help_text="For 'Buy' listings only.", null=True)),
                ('floors', models.PositiveIntegerField(blank=True, null=True)),
                ('master_bedrooms_min', models.PositiveIntegerField(blank=True, help_text="For 'Buy' listings only.", null=True)),
                ('master_bedrooms', models.PositiveIntegerField(blank=True, null=True)),
                ('common_bedrooms_min', models.PositiveIntegerField(blank=True, help_text="For 'Buy' listings only.", null=True)),
                ('common_bedrooms', models.PositiveIntegerField(blank=True, null=True)),
                ('common_bathrooms_min', models.PositiveIntegerField(blank=True, help_text="For 'Buy' listings only.", null=True)),
                ('common_bathrooms', models.PositiveIntegerField(blank=True, null=True)),
                ('living_rooms_min', models.PositiveIntegerField(blank=True, help_text="For 'Buy' listings only.", null=True)),
                ('living_rooms', models.PositiveIntegerField(blank=True, null=True)),
                ('kitchens_min', models.PositiveIntegerField(blank=True, help_text="For 'Buy' listings only.", null=True)),
                ('kitchens', models.PositiveIntegerField(blank=True, null=True)),
                ('has_laundry', models.BooleanField(default=False)),
                ('has_store', models.BooleanField(default=False)),
                ('has_puja_room', models.BooleanField(default=False)),
                ('furnishing', models.CharField(blank=True, choices=[('FULL', 'Full'), ('SEMI', 'Semi'), ('NONE', 'None')], max_length=10, null=True)),
                ('parking_car_min', models.PositiveIntegerField(blank=True, help_text="For 'Buy' listings only.", null=True)),
                ('parking_car', models.PositiveIntegerField(blank=True, null=True)),
                ('parking_bike_min', models.PositiveIntegerField(blank=True, help_text="For 'Buy' listings only.", null=True)),
                ('parking_bike', models.PositiveIntegerField(blank=True, null=True)),
                ('rent_duration_value', models.PositiveIntegerField(blank=True, null=True)),
                ('rent_duration_unit', models.CharField(blank=True, choices=[('MONTHS', 'Months'), ('YEARS', 'Years')], max_length=10, null=True)),
                ('rent_period', models.CharField(blank=True, choices=[('MONTHLY', 'Monthly'), ('YEARLY', 'Yearly')], max_length=10, null=True)),
                ('other_facilities', models.TextField(blank=True, help_text='Enter any additional facilities that are not in the list, separated by commas (e.g. Rooftop Garden, Servant Quarters).', null=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ktmpropertyhub.district')),
                ('facilities', models.ManyToManyField(blank=True, help_text='Select the available facilities from the predefined list.', to='ktmpropertyhub.facility')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(blank=True, help_text='State or Province', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ktmpropertyhub.state')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('caption', models.CharField(blank=True, help_text='An optional caption for the image.', max_length=255, null=True)),
                ('is_thumbnail', models.BooleanField(default=False, help_text='Is this the main display image for the property?')),
                ('property_listing', models.ForeignKey(help_text='The property this image belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='ktmpropertyhub.propertylisting')),
            ],
        ),
        migrations.AddField(
            model_name='district',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='ktmpropertyhub.state'),
        ),
    ]
